/*******************************************************************************
 (c) 2005-2014 Copyright, Real-Time Innovations, Inc.  All rights reserved.
 RTI grants Licensee a license to use, modify, compile, and create derivative
 works of the Software.  Licensee has the right to distribute object form only
 for use with RTI products.  The Software is provided "as is", with no warranty
 of any type, including any warranty for fitness for any purpose. RTI is under
 no obligation to maintain or support the Software.  RTI shall not be liable for
 any incidental or consequential damages arising out of the use or inability to
 use the software.
******************************************************************************/

#include "ice.idl"

module com {
module rti {
module medical {
module generated {

// Topic used to send patient-device mapping data
const string DevicePatientMappingTopic = 
	"com::rti::medical::DevicePatientMapping";

// For now, using a long to identify a patient. This can be changed to a
// string, or a structure depending on the requirements for uniquely 
// identifying a patient.
typedef long PatientId;

// Patient being monitoried by a device
struct DevicePatientMapping
{
	// Unique ID of a device
	ice::UniqueDeviceIdentifier device_id; //@key

	// Unique ID of a patient: Could be a key field, but is not because
	// the application would like to query for the patient ID based on the
	// device ID.
	PatientId patient_id;

};

};
};
};
};
